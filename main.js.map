{"version":3,"sources":["webpack:///./dist/shared/fesm5/arp-shared.js","webpack:///./gui/$_lazy_route_resource lazy namespace object","webpack:///./gui/app/app.module.ts","webpack:///./gui/app/config/config.module.ts","webpack:///./gui/app/config/config.service.ts","webpack:///./gui/app/config/group.component.html","webpack:///./gui/app/config/group.component.scss","webpack:///./gui/app/config/group.component.ts","webpack:///./gui/app/root.component.html","webpack:///./gui/app/root.component.scss","webpack:///./gui/app/root.component.ts","webpack:///./gui/app/shared/components/graph.component.scss","webpack:///./gui/app/shared/components/graph.component.ts","webpack:///./gui/app/shared/components/input-error.component.html","webpack:///./gui/app/shared/components/input-error.component.ts","webpack:///./gui/app/shared/components/loading-spinner.component.scss","webpack:///./gui/app/shared/components/loading-spinner.component.ts","webpack:///./gui/app/shared/services/simulator.service.ts","webpack:///./gui/app/shared/shared.module.ts","webpack:///./gui/app/shared/utils/validators.ts","webpack:///./gui/environments/environment.ts","webpack:///./gui/environments/version.ts","webpack:///./gui/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function defaultConfig() {\n    return {\n        rng: {\n            type: 'mersenne-twister',\n            seed: 12345,\n        },\n        arena: {\n            type: 'simple-grid',\n            width: 5,\n            height: 5,\n        },\n    };\n}\n\nfunction isReadyEvent(evt) {\n    return evt.type === 'ready';\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { defaultConfig, isReadyEvent };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXJwLXNoYXJlZC5qcy5tYXAiLCJzb3VyY2VzIjpbIm5nOi8vYXJwLXNoYXJlZC9jb25maWcudHMiLCJuZzovL2FycC1zaGFyZWQvZXZlbnQudHMiLCJuZzovL2FycC1zaGFyZWQvYXJwLXNoYXJlZC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgaW50ZXJmYWNlIENvbmZpZyB7XG4gIHJuZzogUk5HQ29uZmlnXG4gIGFyZW5hOiBBcmVuYUNvbmZpZ1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIE1lcnNlbm5lVHdpc3RlclJOR0NvbmZpZyB7XG4gIHR5cGU6ICdtZXJzZW5uZS10d2lzdGVyJ1xuICBzZWVkOiBudW1iZXJcbn1cblxuZXhwb3J0IGludGVyZmFjZSBDcnlwdG9STkdDb25maWcge1xuICB0eXBlOiAnY3J5cHRvJ1xufVxuXG5leHBvcnQgdHlwZSBSTkdDb25maWcgPSBNZXJzZW5uZVR3aXN0ZXJSTkdDb25maWcgfCBDcnlwdG9STkdDb25maWdcblxuZXhwb3J0IGludGVyZmFjZSBTaW1wbGVHcmlkQXJlbmFDb25maWcge1xuICB0eXBlOiAnc2ltcGxlLWdyaWQnXG4gIHdpZHRoOiBudW1iZXJcbiAgaGVpZ2h0OiBudW1iZXJcbn1cblxuZXhwb3J0IGludGVyZmFjZSBXZWlnaHRlZEdyaWRBcmVuYUNvbmZpZyB7XG4gIHR5cGU6ICd3ZWlnaHRlZC1ncmlkJ1xuICB3aWR0aDogbnVtYmVyXG4gIGhlaWdodDogbnVtYmVyXG5cbiAgbWFqb3JYOiBudW1iZXJcbiAgbWFqb3JZOiBudW1iZXJcblxuICBtaW5vcldlaWdodDogbnVtYmVyXG4gIG1ham9yV2VpZ2h0OiBudW1iZXJcbn1cblxuZXhwb3J0IHR5cGUgQXJlbmFDb25maWcgPSBTaW1wbGVHcmlkQXJlbmFDb25maWcgfCBXZWlnaHRlZEdyaWRBcmVuYUNvbmZpZ1xuXG5leHBvcnQgZnVuY3Rpb24gZGVmYXVsdENvbmZpZygpOiBDb25maWcge1xuICByZXR1cm4ge1xuICAgIHJuZzoge1xuICAgICAgdHlwZTogJ21lcnNlbm5lLXR3aXN0ZXInLFxuICAgICAgc2VlZDogMTIzNDUsXG4gICAgfSxcbiAgICBhcmVuYToge1xuICAgICAgdHlwZTogJ3NpbXBsZS1ncmlkJyxcbiAgICAgIHdpZHRoOiA1LFxuICAgICAgaGVpZ2h0OiA1LFxuICAgIH0sXG4gIH1cbn1cbiIsImV4cG9ydCBpbnRlcmZhY2UgQXJlbmFEYXRhIHtcbiAgd2lkdGg6IG51bWJlclxuICBoZWlnaHQ6IG51bWJlclxuICBub2RlczogeyBpZDogbnVtYmVyIH1bXVxuICBlZGdlczoge1xuICAgIGxlZnQ6IG51bWJlcixcbiAgICByaWdodDogbnVtYmVyLFxuICAgIHdlaWdodDogbnVtYmVyLFxuICB9W11cbn1cblxuZXhwb3J0IGludGVyZmFjZSBSZWFkeUV2ZW50IHtcbiAgdHlwZTogJ3JlYWR5J1xuICBhcmVuYTogQXJlbmFEYXRhXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUHJvZ3Jlc3NFdmVudCB7XG4gIHR5cGU6ICdwcm9ncmVzcydcbn1cblxuZXhwb3J0IHR5cGUgRXZlbnQgPSBSZWFkeUV2ZW50IHwgUHJvZ3Jlc3NFdmVudFxuXG5leHBvcnQgZnVuY3Rpb24gaXNSZWFkeUV2ZW50KGV2dDogRXZlbnQpOiBldnQgaXMgUmVhZHlFdmVudCB7XG4gIHJldHVybiBldnQudHlwZSA9PT0gJ3JlYWR5J1xufVxuIiwiLyoqXG4gKiBHZW5lcmF0ZWQgYnVuZGxlIGluZGV4LiBEbyBub3QgZWRpdC5cbiAqL1xuXG5leHBvcnQgKiBmcm9tICcuL3B1YmxpYy1hcGknO1xuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7SUFxQ0UsT0FBTztRQUNMLEdBQUcsRUFBRTtZQUNILElBQUksRUFBRSxrQkFBa0I7WUFDeEIsSUFBSSxFQUFFLEtBQUs7U0FDWjtRQUNELEtBQUssRUFBRTtZQUNMLElBQUksRUFBRSxhQUFhO1lBQ25CLEtBQUssRUFBRSxDQUFDO1lBQ1IsTUFBTSxFQUFFLENBQUM7U0FDVjtLQUNGLENBQUE7Q0FDRjs7c0JDMUI0QixHQUFVO0lBQ3JDLE9BQU8sR0FBRyxDQUFDLElBQUksS0FBSyxPQUFPLENBQUE7Q0FDNUI7O0FDeEJEOztHQUVHOzs7OyJ9","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./gui/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core'\nimport { BrowserModule } from '@angular/platform-browser'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { ServiceWorkerModule } from '@angular/service-worker'\n\nimport { environment } from '../environments/environment'\n\nimport { ConfigModule } from './config/config.module'\nimport { SharedModule } from './shared/shared.module'\n\nimport { RootComponent } from './root.component'\n\n@NgModule({\n  declarations: [\n    RootComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n    }),\n\n    SharedModule,\n    ConfigModule,\n  ],\n  bootstrap: [RootComponent],\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core'\n\nimport { SharedModule } from '../shared/shared.module'\n\nimport { ConfigGroupComponent } from './group.component'\n\n@NgModule({\n  imports: [\n    SharedModule,\n  ],\n  exports: [\n    ConfigGroupComponent,\n  ],\n  declarations: [\n    ConfigGroupComponent,\n  ],\n})\nexport class ConfigModule {}\n","import { Injectable } from '@angular/core'\nimport {\n  FormBuilder, FormGroup, ValidatorFn, Validators,\n} from '@angular/forms'\n\nimport { Config } from '@arp/shared'\n\nimport { equalsValidator } from '../shared/utils/validators'\n\nexport interface ConfigGroup {\n  id: string\n  title: string\n\n  types: { id: string, label: string }[]\n  controls: { [id: string]: ConfigControl[] }\n}\n\nexport interface ConfigControl {\n  id: string\n  type: 'number'\n  placeholder: string\n  default: any\n  validators: ValidatorFn | ValidatorFn[]\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ConfigService {\n\n  constructor(\n    private readonly formBuilder: FormBuilder,\n  ) {}\n\n  readonly groups: ConfigGroup[] = [\n    {\n      id: 'rng',\n      title: 'Random Number Generator',\n      types: [\n        { id: 'mersenne-twister', label: 'Mersenne Twister' },\n        { id: 'crypto', label: 'Cryptographic RNG' },\n      ],\n      controls: {\n        'mersenne-twister': [\n          {\n            id: 'seed',\n            type: 'number',\n            placeholder: 'Seed',\n            default: 1234,\n            validators: Validators.required,\n          },\n        ],\n      },\n    },\n    {\n      id: 'arena',\n      title: 'Arena',\n      types: [\n        { id: 'simple-grid', label: 'Simple Grid' },\n        { id: 'weighted-grid', label: 'Weighted Grid' },\n      ],\n      controls: {\n        'simple-grid': [\n          {\n            id: 'width',\n            type: 'number',\n            placeholder: 'Width',\n            default: 5,\n            validators: [Validators.required, Validators.min(0)],\n          },\n          {\n            id: 'height',\n            type: 'number',\n            placeholder: 'Height',\n            default: 5,\n            validators: [Validators.required, Validators.min(0)],\n          },\n        ],\n        'weighted-grid': [\n          {\n            id: 'width',\n            type: 'number',\n            placeholder: 'Width',\n            default: 5,\n            validators: [Validators.required, Validators.min(0)],\n          },\n          {\n            id: 'height',\n            type: 'number',\n            placeholder: 'Height',\n            default: 5,\n            validators: [Validators.required, Validators.min(0)],\n          },\n          {\n            id: 'majorX',\n            type: 'number',\n            placeholder: 'Horizontal Major Streets',\n            default: 2,\n            validators: [Validators.required, Validators.min(0)],\n          },\n          {\n            id: 'majorY',\n            type: 'number',\n            placeholder: 'Vertical Major Streets',\n            default: 2,\n            validators: [Validators.required, Validators.min(0)],\n          },\n          {\n            id: 'minorWeight',\n            type: 'number',\n            placeholder: 'Minor Street Weight',\n            default: 5,\n            validators: [Validators.required, Validators.min(0)],\n          },\n          {\n            id: 'majorWeight',\n            type: 'number',\n            placeholder: 'Major Street Weight',\n            default: 1,\n            validators: [Validators.required, Validators.min(0)],\n          },\n        ],\n      },\n    },\n  ]\n\n  readonly form = this.makeFormGroup()\n\n  get config(): Config {\n    const config: any = {}\n\n    for (const group of this.groups) {\n      const typeControl = this.form.get(group.id + 'Type')\n      if (!typeControl) { throw new Error('no type control') }\n\n      const valueControl = this.form.get(group.id)\n      if (!valueControl) { throw new Error('no value control') }\n\n      config[group.id] = {\n        type: typeControl.value,\n        ...valueControl.value,\n      }\n    }\n\n    return config\n  }\n\n  updateForm(name: string, value: string): void {\n    const typeControl = this.form.get(name + 'Type')\n    if (!typeControl) { throw new Error('no type control') }\n\n    this.form.removeControl(name)\n\n    const group = this.groups.find(g => g.id === name)\n    if (!group) { throw new Error('no group') }\n\n    const controls = group.controls[value]\n    if (!controls) { return }\n\n    const config: { [key: string]: any } = {}\n\n    for (const control of controls) {\n      config[control.id] = [control.default, control.validators]\n    }\n\n    this.form.addControl(name, this.formBuilder.group(config))\n  }\n\n  private makeFormGroup(): FormGroup {\n    const config: { [key: string]: any } = {}\n\n    for (const group of this.groups) {\n      const typeIDs = group.types.map(t => t.id)\n      if (typeIDs.length === 0) { throw new Error('no type values') }\n\n      const typeConfig = [typeIDs[0], [\n        Validators.required,\n        equalsValidator(...typeIDs),\n      ]]\n\n      config[group.id + 'Type'] = typeConfig\n    }\n\n    return this.formBuilder.group(config)\n  }\n\n}\n","module.exports = \"<mat-expansion-panel>\\n  <mat-expansion-panel-header>\\n    <mat-panel-title>{{ group?.title }}</mat-panel-title>\\n  </mat-expansion-panel-header>\\n\\n  <mat-form-field class=\\\"type\\\">\\n    <mat-select *ngIf=\\\"typeControl\\\" [formControl]=\\\"typeControl\\\" placeholder=\\\"Type\\\">\\n      <mat-option\\n          *ngFor=\\\"let type of group?.types\\\"\\n          [value]=\\\"type.id\\\"\\n      >{{ type.label }}</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n\\n  <ng-container *ngIf=\\\"formGroup$ | async as formGroup\\\" [formGroup]=\\\"formGroup\\\">\\n    <mat-form-field *ngFor=\\\"let control of group?.controls[typeControl?.value]\\\">\\n      <input\\n          [formControlName]=\\\"control.id\\\"\\n          [type]=\\\"control.type\\\"\\n          [placeholder]=\\\"control.placeholder\\\"\\n          matInput>\\n      <mat-error><app-input-error></app-input-error></mat-error>\\n    </mat-form-field>\\n  </ng-container>\\n\\n</mat-expansion-panel>\\n\"","module.exports = \":host {\\n  height: -webkit-fit-content;\\n  height: -moz-fit-content;\\n  height: fit-content; }\\n\\nmat-expansion-panel {\\n  margin: 0;\\n  height: 100%; }\\n\\nmat-panel-title {\\n  font-size: 18px; }\\n\\nmat-form-field {\\n  margin: 0 1px; }\\n\\nmat-form-field.type {\\n    display: block; }\\n\"","import {\n  ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges,\n} from '@angular/core'\nimport { AbstractControl } from '@angular/forms'\n\nimport { EMPTY, Observable } from 'rxjs'\nimport { map, startWith } from 'rxjs/operators'\n\nimport { ConfigGroup, ConfigService } from './config.service'\n\n@Component({\n  selector: 'app-config-group',\n  templateUrl: './group.component.html',\n  styleUrls: ['./group.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfigGroupComponent implements OnChanges {\n\n  constructor(\n    private readonly configService: ConfigService,\n  ) {}\n\n  @Input()\n  group?: ConfigGroup\n\n  typeControl: AbstractControl | null = null\n  formGroup$: Observable<AbstractControl | null> = EMPTY\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.group && this.group) {\n      this.typeControl = this.configService.form.get(this.group.id + 'Type')\n      this.updateFormGroup(this.group)\n    }\n  }\n\n  private updateFormGroup(group: ConfigGroup): void {\n    if (!this.typeControl) {\n      this.formGroup$ = EMPTY\n      return\n    }\n\n    this.formGroup$ = this.typeControl.valueChanges.pipe(\n      startWith(this.typeControl.value),\n      map(value => {\n        this.configService.updateForm(group.id, value)\n        return this.configService.form.get(group.id)\n      }),\n    )\n  }\n\n}\n","module.exports = \"<mat-toolbar color=\\\"primary\\\">ARP Simulator</mat-toolbar>\\n\\n<mat-card>\\n  <mat-card-title>\\n    <span>Configuration</span>\\n\\n    <button (click)=\\\"toggleOpen()\\\" type=\\\"button\\\" mat-icon-button\\n        [matTooltip]=\\\"allOpen ? 'Collapse All' : 'Open All'\\\">\\n      <mat-icon>{{ allOpen ? 'unfold_less' : 'unfold_more' }}</mat-icon>\\n    </button>\\n\\n  </mat-card-title>\\n\\n  <mat-card-content>\\n    <form id=\\\"config-form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"start()\\\">\\n      <mat-accordion [multi]=\\\"true\\\">\\n        <app-config-group\\n            *ngFor=\\\"let group of groups\\\"\\n            [group]=\\\"group\\\">\\n        </app-config-group>\\n      </mat-accordion>\\n    </form>\\n  </mat-card-content>\\n\\n  <mat-card-actions align=\\\"end\\\">\\n    <button type=\\\"submit\\\" form=\\\"config-form\\\" mat-raised-button color=\\\"primary\\\">Start</button>\\n  </mat-card-actions>\\n\\n</mat-card>\\n\\n<mat-card>\\n  <mat-card-title>\\n    Arena\\n  </mat-card-title>\\n  <mat-card-content>\\n    <app-graph [data]=\\\"arena$ | async\\\"></app-graph>\\n  </mat-card-content>\\n</mat-card>\\n\"","module.exports = \"mat-card {\\n  margin: 16px; }\\n\\nmat-card-title {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between; }\\n\\nmat-accordion {\\n  display: -ms-grid;\\n  display: grid;\\n  grid-gap: 16px;\\n  -ms-grid-columns: (1fr)[3];\\n      grid-template-columns: repeat(3, 1fr); }\\n\\n@media (max-width: 959px) {\\n    mat-accordion {\\n      -ms-grid-columns: (1fr)[2];\\n          grid-template-columns: repeat(2, 1fr); } }\\n\\n@media (max-width: 599px) {\\n    mat-accordion {\\n      -ms-grid-columns: auto;\\n          grid-template-columns: auto; } }\\n\"","import {\n  AfterViewInit, ChangeDetectionStrategy, Component, ViewChild,\n} from '@angular/core'\nimport { MatAccordion } from '@angular/material'\n\nimport { SimulatorService } from './shared/services/simulator.service'\n\nimport { ConfigService } from './config/config.service'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './root.component.html',\n  styleUrls: ['./root.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RootComponent implements AfterViewInit {\n\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly simulatorService: SimulatorService,\n  ) {}\n\n  @ViewChild(MatAccordion) readonly accordion!: MatAccordion\n\n  readonly groups = this.configService.groups\n  readonly form = this.configService.form\n  readonly arena$ = this.simulatorService.arena$\n\n  allOpen = true\n\n  ngAfterViewInit(): void {\n    // Need to do this in the next turn of the change detector\n    Promise.resolve().then(() => this.accordion.openAll())\n  }\n\n  toggleOpen(): void {\n    if (this.allOpen) {\n      this.accordion.closeAll()\n    } else {\n      this.accordion.openAll()\n    }\n    this.allOpen = !this.allOpen\n  }\n\n  start(): void {\n    if (this.form.invalid) {\n      console.warn('form invalid')\n      return\n    }\n\n    const config = this.configService.config\n\n    this.allOpen = false\n    this.accordion.closeAll()\n\n    this.simulatorService.start()\n    this.simulatorService.run(config)\n  }\n\n}\n","module.exports = \":host {\\n  display: block;\\n  width: 100%;\\n  height: 400px;\\n  background-color: lightblue; }\\n\"","import {\n  ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, OnDestroy,\n  OnInit, SimpleChanges,\n} from '@angular/core'\n\nimport { ArenaData } from '@arp/shared'\n\nimport * as cytoscape from 'cytoscape'\n\n@Component({\n  selector: 'app-graph',\n  template: '',\n  styleUrls: ['./graph.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GraphComponent implements OnInit, OnChanges, OnDestroy {\n\n  constructor(\n    private readonly elementRef: ElementRef,\n  ) {}\n\n  private cy?: cytoscape.Core\n\n  @Input()\n  data: ArenaData = {\n    width: 0,\n    height: 0,\n    nodes: [],\n    edges: [],\n  }\n\n  ngOnInit(): void {\n    this.cy = cytoscape({\n      container: this.elementRef.nativeElement,\n      minZoom: 0.5,\n      maxZoom: 4,\n      style: [\n        {\n          selector: 'node',\n          style: {\n            content: 'data(id)',\n            'text-valign': 'center',\n          },\n        } as cytoscape.Stylesheet,\n        {\n          selector: 'edge',\n          style: {\n            content: 'data(weight)',\n          },\n        } as cytoscape.Stylesheet,\n      ],\n    })\n  }\n\n  ngOnDestroy(): void {\n    if (this.cy) {\n      this.cy.destroy()\n      delete this.cy\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.data) {\n      this.update()\n    }\n  }\n\n  update(): void {\n    const cy = this.cy\n    const data = this.data\n\n    if (!cy) { return }\n    if (!data) { return }\n\n    cy.batch(() => {\n      const nodes = data.nodes.map(node => ({\n        group: 'nodes',\n        data: { id: node.id.toString() },\n      } as cytoscape.ElementDefinition))\n\n      const edges = data.edges.map(edge => ({\n        group: 'edges',\n        data: {\n          source: edge.left.toString(),\n          target: edge.right.toString(),\n          weight: edge.weight,\n        },\n      } as cytoscape.ElementDefinition))\n\n      cy.remove('*')\n      cy.add(nodes)\n      cy.add(edges)\n\n      cy.autolock(false)\n      cy\n        .layout({\n          name: 'grid',\n          rows: data.height,\n          cols: data.width,\n          fit: false,\n          avoidOverlapPadding: 50,\n        })\n        .run()\n      cy.autolock(true)\n    })\n  }\n\n}\n","module.exports = \"<ng-container [ngSwitch]=\\\"type$ | async\\\">\\n  <ng-container *ngSwitchCase=\\\"'required'\\\">This field is required.</ng-container>\\n  <ng-container *ngSwitchCase=\\\"'email'\\\">Please enter a valid email address.</ng-container>\\n  <ng-container *ngSwitchCase=\\\"'match'\\\">This field does not match.</ng-container>\\n  <ng-container *ngSwitchCase=\\\"'min'\\\">Minimum for this field is {{ error.min }}</ng-container>\\n  <ng-container *ngSwitchCase=\\\"'max'\\\">Maximum for this field is {{ error.max }}</ng-container>\\n</ng-container>\\n\"","import { ChangeDetectionStrategy, Component, Host, OnInit } from '@angular/core'\nimport { NgControl } from '@angular/forms'\nimport { MatFormField } from '@angular/material'\n\nimport { EMPTY, Observable } from 'rxjs'\nimport { map, startWith, tap } from 'rxjs/operators'\n\n@Component({\n  selector: 'app-input-error',\n  templateUrl: './input-error.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class InputErrorComponent implements OnInit {\n\n  constructor(\n    @Host() private readonly field: MatFormField,\n  ) {}\n\n  type$: Observable<string> = EMPTY\n  error: any = null\n\n  ngOnInit(): void {\n    const control = this.control\n\n    if (!control || !control.statusChanges) {\n      throw new Error('field has no attached control')\n    }\n\n    const getError = () => {\n      if (!control.errors) {\n        return ''\n      }\n      return Object.keys(control.errors)[0]\n    }\n\n    this.type$ = control.statusChanges.pipe(\n      map(() => getError()),\n      startWith(getError()),\n      tap(type => {\n        if (control.errors) {\n          this.error = control.errors[type]\n        }\n      }),\n    )\n  }\n\n  get control(): NgControl | null {\n    // This is a bit of a hack.  If this field ever goes away, we'll probably\n    // need to go back to manually specifiying the control name.\n    return this.field._control.ngControl\n  }\n\n}\n","module.exports = \":host {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  background: rgba(128, 128, 128, 0.4); }\\n\\nmat-spinner {\\n  margin: auto; }\\n\"","import { ChangeDetectionStrategy, Component, Input } from '@angular/core'\n\n@Component({\n  selector: 'app-loading-spinner',\n  template: '<mat-spinner [diameter]=\"diameter\"></mat-spinner>',\n  styleUrls: ['./loading-spinner.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoadingSpinnerComponent {\n\n  @Input() diameter = 64\n\n}\n","import { Injectable } from '@angular/core'\n\nimport { Observable, Subject } from 'rxjs'\nimport { filter, map } from 'rxjs/operators'\n\nimport { ArenaData, Command, Config, Event, isReadyEvent } from '@arp/shared'\n\nconst WORKER_PATH = './assets/simulator.js'\n\n@Injectable({ providedIn: 'root' })\nexport class SimulatorService {\n\n  private readonly eventSubject = new Subject<Event>()\n\n  private worker?: Worker\n\n  readonly events$: Observable<Event> = this.eventSubject.asObservable()\n  readonly arena$: Observable<ArenaData> = this.events$\n    .pipe(\n      filter(isReadyEvent),\n      map(evt => evt.arena),\n    )\n\n  start(): void {\n    if (this.worker) {\n      this.stop()\n    }\n\n    console.info('Starting worker...')\n    this.worker = new Worker(WORKER_PATH)\n    this.worker.addEventListener('message', evt => this.onWorkerMessage(evt))\n    this.worker.addEventListener('error', evt => this.onWorkerError(evt))\n  }\n\n  stop(): void {\n    if (!this.worker) {\n      return\n    }\n\n    this.worker.terminate()\n    delete this.worker\n  }\n\n  run(config: Config): void {\n    this.send({ type: 'run', config })\n  }\n\n  private send(cmd: Command): void {\n    if (!this.worker) {\n      throw new Error('simulator not started')\n    }\n\n    this.worker.postMessage(cmd)\n  }\n\n  private onWorkerMessage(messageEvent: MessageEvent): void {\n    const evt: Event = messageEvent.data\n    console.log('simulator event:', evt)\n    this.eventSubject.next(evt)\n  }\n\n  private onWorkerError(evt: ErrorEvent): void {\n    console.error('Simulator error:', evt)\n  }\n\n}\n","import { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\nimport { ReactiveFormsModule } from '@angular/forms'\nimport {\n  MatButtonModule, MatCardModule, MatExpansionModule, MatFormFieldModule,\n  MatIconModule, MatInputModule, MatProgressSpinnerModule, MatSelectModule,\n  MatToolbarModule, MatTooltipModule,\n} from '@angular/material'\n\nimport { GraphComponent } from './components/graph.component'\nimport { InputErrorComponent } from './components/input-error.component'\nimport { LoadingSpinnerComponent } from './components/loading-spinner.component'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n\n    MatButtonModule,\n    MatCardModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatTooltipModule,\n  ],\n  exports: [\n    CommonModule,\n    ReactiveFormsModule,\n\n    MatButtonModule,\n    MatCardModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatTooltipModule,\n\n    GraphComponent,\n    InputErrorComponent,\n    LoadingSpinnerComponent,\n  ],\n  declarations: [\n    GraphComponent,\n    InputErrorComponent,\n    LoadingSpinnerComponent,\n  ],\n})\nexport class SharedModule {}\n","import { ValidatorFn } from '@angular/forms'\n\nexport function equalsValidator<T>(...values: T[]): ValidatorFn {\n  return control => {\n    if (values.indexOf(control.value) === -1) {\n      return { equals: true }\n    }\n    return null\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nimport { VERSION } from './version'\n\nexport const environment = {\n  name: 'development',\n  version: VERSION,\n  production: false,\n}\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\nimport 'zone.js/dist/zone-error' // Included with Angular CLI.\n","export const VERSION = {\n  tag: 'v0.0.0',\n  branch: 'update',\n  commit: '5e2ec8daf3740b5513d4850c15bf94860ff8eff7',\n  short: '5e2ec8d',\n  string: 'v0.0.0-5e2ec8d*',\n}\n","import { enableProdMode } from '@angular/core'\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic'\n\nimport { AppModule } from './app/app.module'\nimport { environment } from './environments/environment'\n\nif (environment.production) {\n  enableProdMode()\n}\n\nconsole.info('commit:', environment.version.commit)\nconsole.info('branch:', environment.version.branch)\nconsole.info('version:', environment.version.tag)\nconsole.info('environment:', environment.name)\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .then(() => document.body.classList.remove('app-loading'))\n  .catch(err => console.error('Angular bootstrap error:', err))\n"],"sourceRoot":""}